{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillCursorsOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n  constructor(cursorId, ns, server, options) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n    }\n\n    const killCursors = this.ns.collection;\n\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n    }\n\n    const killCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    server.command(this.ns, killCursorsCommand, {\n      session\n    }, () => callback());\n  }\n\n}\n\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"mappings":";;;;;;;AACA;;AAIA;;AAYA,MAAaA,oBAAb,SAA0CC,6BAA1C,CAA2D;AAGzDC,cAAYC,QAAZ,EAA4BC,EAA5B,EAAkDC,MAAlD,EAAkEC,OAAlE,EAA2F;AACzF,UAAMA,OAAN;AACA,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKE,MAAL,GAAcA,MAAd;AACD;;AAEDE,SAAO,CAACF,MAAD,EAAiBG,OAAjB,EAAqDC,QAArD,EAA6E;AAClF,QAAIJ,MAAM,KAAK,KAAKA,MAApB,EAA4B;AAC1B,aAAOI,QAAQ,CACb,IAAIC,yBAAJ,CAAsB,2DAAtB,CADa,CAAf;AAGD;;AAED,UAAMC,WAAW,GAAG,KAAKP,EAAL,CAAQQ,UAA5B;;AACA,QAAID,WAAW,IAAI,IAAnB,EAAyB;AACvB;AACA;AACA,aAAOF,QAAQ,CACb,IAAIC,yBAAJ,CAAsB,yDAAtB,CADa,CAAf;AAGD;;AAED,UAAMG,kBAAkB,GAAuB;AAC7CF,iBAD6C;AAE7CG,aAAO,EAAE,CAAC,KAAKX,QAAN;AAFoC,KAA/C;AAKAE,UAAM,CAACU,OAAP,CAAe,KAAKX,EAApB,EAAwBS,kBAAxB,EAA4C;AAAEL;AAAF,KAA5C,EAAyD,MAAMC,QAAQ,EAAvE;AACD;;AAhCwD;;AAA3DO;AAmCA,+BAAchB,oBAAd,EAAoC,CAACC,mBAAOgB,uBAAR,CAApC","names":["KillCursorsOperation","operation_1","constructor","cursorId","ns","server","options","execute","session","callback","error_1","killCursors","collection","killCursorsCommand","cursors","command","exports","MUST_SELECT_SAME_SERVER"],"sources":["C:\\Users\\AnÄ‘elo\\node_modules\\mongodb\\src\\operations\\kill_cursors.ts"],"sourcesContent":["import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, OperationOptions } from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  execute(server: Server, session: ClientSession | undefined, callback: Callback<void>): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Killcursor must run on the same server operation began on')\n      );\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(\n        new MongoRuntimeError('A collection name must be determined before killCursors')\n      );\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n\n    server.command(this.ns, killCursorsCommand, { session }, () => callback());\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n"]},"metadata":{},"sourceType":"script"}